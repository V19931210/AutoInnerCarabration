using System;
using System.Collections.Generic;
using System.Text;
using System.Net;
using System.IO;
using Microsoft.AspNetCore;
using Newtonsoft.Json;

namespace weldDeviceProduct
{
    public struct ERROR
    {
        public int code;
        public string message;
        public string details;
        public string validationErrors;
    }

    public struct TestLotSnReq
    {
        public string lotSn;//ID号
        public string operationCode;//工序号
        public string workstationCode;//工站号
        public string shiftCode;//班次编码
        public string testPersonCode;//人员编码
        public string testEq;//测试设备
        public string testProgram;//测试程序
        public string testStartTime;//开始时间
        public string testEndTime;//结束时间
        public string testResult;//测试结果 OK or NG
        public string testDetail;//测试明细
        public string ngRemark;//NG备注
        public string[] badDefectList;//不良代码列表
    }

    public struct TestLotSnResp
    {
        public ERROR? error;
        public string result;
        public string targetUrl;
        public bool success;
        public bool unAuthorizedRequest;
        public bool __abp;
    }

    public struct GetServerDateTimeReq
    {

    }

    public struct GetServerDateTimeResp
    {
        public ERROR? error;
        public string result;
        public string targetUrl;
        public bool success;
        public bool unAuthorizedRequest;
        public bool __abp;
    }

    public class MESApi
    {
        public const string GetServerDateTimeUrl = "http://10.1.1.87:8081/api/services/app/WipApis/GetServerDateTime";
        public const string TestLotSnUrl = "http://10.1.1.87:8081/api/services/app/WipApis/TestLotSn";
        public const string DateTimeFormat = "YYYY-MM-DD HH:MM:ss";

        public static JsonSerializerSettings jsonSetting = new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore };//忽略结构体空值字段

        private HttpWebRequest initHttpWebRequest(string url, string method)
        {
            HttpWebRequest webReq = (HttpWebRequest)WebRequest.Create(url);
            webReq.Method = method;
            webReq.Accept = "application/json, text/plain, */*";
            webReq.ContentType = "application/json";
            webReq.Headers.Add(HttpRequestHeader.AcceptLanguage, "zh-CN");
            webReq.Headers.Add(".AspNetCore.Culture", "application/json");

            return webReq;
        }

        public void TestLotSn(TestLotSnReq req, ref TestLotSnResp resp)
        {
            HttpWebRequest webReq = initHttpWebRequest(TestLotSnUrl, "POST");

            string jsonReq = JsonConvert.SerializeObject(req, jsonSetting);
            byte[] byteReq = Encoding.UTF8.GetBytes(jsonReq);
            using (Stream reqStream = webReq.GetRequestStream())
            {
                reqStream.Write(byteReq, 0, byteReq.Length);
            }

            HttpWebResponse webResp;
            try
            {
                webResp = (HttpWebResponse)webReq.GetResponse();
            }
            catch (WebException ex)
            {
                webResp = (HttpWebResponse)ex.Response;
            }

            using (Stream respStream = webResp.GetResponseStream())
            {
                using (StreamReader sReader = new StreamReader(respStream, Encoding.UTF8))
                {
                    resp = JsonConvert.DeserializeObject<TestLotSnResp>(sReader.ReadToEnd(), jsonSetting);

                }
            }

        }

        public void GetServerDateTime(ref GetServerDateTimeResp resp)
        {
            HttpWebRequest webReq = initHttpWebRequest(GetServerDateTimeUrl, "GET");

            HttpWebResponse webResp;
            try
            {
                webResp = (HttpWebResponse)webReq.GetResponse();
            }
            catch (WebException ex)
            {
                webResp = (HttpWebResponse)ex.Response;
            }

            using (Stream respStream = webResp.GetResponseStream())
            {
                using (StreamReader sReader = new StreamReader(respStream, Encoding.UTF8))
                {
                    resp = JsonConvert.DeserializeObject<GetServerDateTimeResp>(sReader.ReadToEnd(), jsonSetting);
                }
            }

        }
    }
}
